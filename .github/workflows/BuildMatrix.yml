name: Universal Build Matrix

on:
  push:
    # Only allow standard semver version tags compatible with CMake's VERSION keyword.
    tags: '[0-9]+.[0-9]+.[0-9]+'

  workflow_dispatch:
    inputs:
      build-type:
        description: 'Configuration'
        type: choice
        options:
        - Debug
        - RelWithDebInfo
        - Release
        - MinSizeRel
        default: 'Release'
        required: true
      artifact-retention:
        description: 'Build Artifact Retention Time'
        type: number
        required: true
        default: '5'
        
  
env:
  BUILD_TYPE: ${{github.event.inputs.build-type}}

jobs:
  build:
    runs-on:  ${{matrix.os}}
    
    strategy:
      matrix:
        os:   [ ubuntu-latest, windows-latest, macos-latest ]
        
    steps:
        # Checkout repository, recurse submodules, and fetch all history/tags
      - uses: actions/checkout@v2
        with:
           submodules:  recursive
           fetch-depth: 0
        # Setup ninja
      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Configure CMake (Windows)
        if:   matrix.os == windows-latest
        run:  cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G Ninja

      - name: Download Tools (Ubuntu)
        if:   matrix.os == ubuntu-latest
        run:  sudo apt-get update && sudo apt-get install gcc-10 g++-10 zip -y
                
      - name: Configure CMake (POSIX)
        if:   matrix.os == ubuntu-latest || matrix.os == ubuntu-latest
        run:  cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G Ninja
        env:
          CC:  gcc-10
          CXX: g++-10

      - name: Build
        run:  cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
        
      - name: Create Archive
        run:  |
              cd ${{github.workspace}}/build/ARRCON
              zip -T9 ARRCON-$(./ARRCON -vq)-${{runner.os}}.zip ARRCON*
              
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: latest-${{runner.os}}
          path: ${{github.workspace}}/build/ARRCON/*.zip
          retention-days: ${{github.event.inputs.artifact-retention}}
